@jpdev - most of the implementations are very simliar typeDefs - combination of Content and addotional optional interfaces, often
with a few extra simple (string/int/etc) fields on top.  A few times there are more additional complex (refOne, refMany, or object) fields.
Rarely there is a field which requires a type specific resolver, but its supported.
Most are essentially a way to have a descriminated version of the content object (ContentArticle instead of Article) as well as Connection
(ContentArticleConnection instad of ContentConnection) for each particular content type we have.


infographic - ? - Standard setup - Content + Media 
job - common - Standard Setup - Content + simple custom fields
media-gallery - common - standard setup - Conntet + Authorable + simple custom fields
news - common - standard setup - Content + Authorable + simple custom fields
page - common - standard setup - Content
podcast - common - Content + Authorable + Media + simple custom fields
press-release - common - Content + Authorable + simple custom fields
product - common = Content + PrimaryCategory + Inquirable + custom fields
promotion - ? - Content + simple custom fields
review - ? - Content + Authorable + complex custom fields (product ref)
space - ? one site - Content + complex custom fields
sponsored - ? - Content + Authorable
supplier - ? one site - Content & Contactable & Addressable & SocialLinkable & Inquirable & OrganizationContactable + complex custom fields
text-ad - common - Content + simple custom fields
top-100 - ? one site (bzb?) - Content + Addressable + SocialLinkable + simple custom fields
top-list - ? one site (bzb?) - Content + Authorable
venue - ? - Content & Contactable & Addressable & SocialLinkable & Inquirable & OrganizationContactable + complex custom fields
video - common - Content + Authorable + Media + simple custom fields
webinar - common - Content + Media + complex custom fields + resolvers
whitepaper - common - Content + Authorable + Media + complex custom fields

resolvers
company - has a mess of an implementation centered around company youtube videos, pulling from google api, using the @base-cms micro package 
    which is a wrapper of a wrapper of a wrapper of a json client.  Code is in there, but disabling because it feels theres a better way
